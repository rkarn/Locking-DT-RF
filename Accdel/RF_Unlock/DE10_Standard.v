
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module DE10_Standard(

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// LED //////////
	output		 reg    [9:0]		LEDR,

	//////////// Seg7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// GPIO, GPIO connect to GPIO Default //////////
	inout 		    [35:0]		GPIO
);



//=======================================================
//  REG/WIRE declarations
//=======================================================
wire RxD;
reg seg7_disp_off_signal;

parameter storage_length = 4;
reg transmit;
wire transmit_debounced;
wire tick;
wire [7:0] receive_data;
//reg [7:0] count_value;
wire receive_done;
wire [7:0] mem_data;
reg [9:0] mem_address;
reg [9:0] written_mem_address;
reg mem_wr;
reg first_val_receive;
reg txdone_flag;
reg [7:0] pixels_tree1[storage_length-1:0];
reg [7:0] pixels_tree2[storage_length-1:0];
reg [7:0] pixels_tree3[storage_length-1:0];
reg [7:0] Label_tree_1;
reg [7:0] Label_tree_2;
reg [7:0] Label_tree_3;
wire [7:0] Label;
reg [7:0] serial_transmit_reg;
reg Allpixel_receive_complete;
reg [15:0] state_tree1;
reg [15:0] state_tree2;
reg [15:0] state_tree3;
reg ml_inference_completed_tree1;
reg ml_inference_completed_tree2;
reg ml_inference_completed_tree3;

//=======================================================
//  Structural coding
//=======================================================


Binary_To_7Segment seg1 (.i_Clk(CLOCK_50), .i_Binary_Num(seg7_disp_off_signal? Label_tree_1[3:0] : mem_address[3:0]),  .o_Segment_A(HEX0[0]), .o_Segment_B(HEX0[1]),  .o_Segment_C(HEX0[2]), 
                          .o_Segment_D(HEX0[3]), .o_Segment_E(HEX0[4]), .o_Segment_F(HEX0[5]), .o_Segment_G(HEX0[6]));
								  
Binary_To_7Segment seg2 (.i_Clk(CLOCK_50), .i_Binary_Num(seg7_disp_off_signal? Label_tree_2 : mem_address[7:4]),  .o_Segment_A(HEX1[0]), .o_Segment_B(HEX1[1]),  .o_Segment_C(HEX1[2]), 
                          .o_Segment_D(HEX1[3]), .o_Segment_E(HEX1[4]), .o_Segment_F(HEX1[5]), .o_Segment_G(HEX1[6]));
								  
Binary_To_7Segment seg3 (.i_Clk(CLOCK_50), .i_Binary_Num(seg7_disp_off_signal? Label_tree_3 : mem_address[9:8]),  .o_Segment_A(HEX2[0]), .o_Segment_B(HEX2[1]),  .o_Segment_C(HEX2[2]), 
                          .o_Segment_D(HEX2[3]), .o_Segment_E(HEX2[4]), .o_Segment_F(HEX2[5]), .o_Segment_G(HEX2[6]));
								  
								  
Binary_To_7Segment seg4 (.i_Clk(CLOCK_50), .i_Binary_Num(seg7_disp_off_signal? 4'b1011 : written_mem_address[3:0]),  .o_Segment_A(HEX3[0]), .o_Segment_B(HEX3[1]),  .o_Segment_C(HEX3[2]), 
                          .o_Segment_D(HEX3[3]), .o_Segment_E(HEX3[4]), .o_Segment_F(HEX3[5]), .o_Segment_G(HEX3[6]));
								  
Binary_To_7Segment seg5 (.i_Clk(CLOCK_50), .i_Binary_Num(seg7_disp_off_signal? 4'b1010 : written_mem_address[7:4]),  .o_Segment_A(HEX4[0]), .o_Segment_B(HEX4[1]),  .o_Segment_C(HEX4[2]), 
                          .o_Segment_D(HEX4[3]), .o_Segment_E(HEX4[4]), .o_Segment_F(HEX4[5]), .o_Segment_G(HEX4[6]));
								  
Binary_To_7Segment seg6 (.i_Clk(CLOCK_50), .i_Binary_Num(seg7_disp_off_signal? 4'b0001 : written_mem_address[9:8]),  .o_Segment_A(HEX5[0]), .o_Segment_B(HEX5[1]),  .o_Segment_C(HEX5[2]), 
                          .o_Segment_D(HEX5[3]), .o_Segment_E(HEX5[4]), .o_Segment_F(HEX5[5]), .o_Segment_G(HEX5[6]));

					  
								  
assign RxD = GPIO[0];  //UART receiver pin for FPGA
// GPIO[1];  //UART transmitter Pin for FPGA


uart_rx R3 (.i_Clock(CLOCK_50), .i_Rx_Serial(RxD), .o_Rx_DV(receive_done), .o_Rx_Byte(receive_data) );

always @ (posedge receive_done)
begin
      if (SW[0] == 1)    begin LEDR[1] <= 0; end
      else begin LEDR[1] <= ~LEDR[1]; end
end

always @ (posedge CLOCK_50)
begin
    if (receive_done == 1)
        begin
        mem_address <= mem_address+1;   written_mem_address <= mem_address; 
        pixels_tree1[mem_address] <= receive_data;
		  pixels_tree2[mem_address] <= receive_data;
		  pixels_tree3[mem_address] <= receive_data;
        if (mem_address >= storage_length-1)
        begin Allpixel_receive_complete <=1; end
        else
        begin Allpixel_receive_complete <=0; end
        end
            
     if (SW[0] == 1)
         begin
            mem_address <= 0;
				seg7_disp_off_signal <=0;
         end
     
     if (tick == 1)
         begin
           if (txdone_flag == 0 )
               begin
                    txdone_flag <= 1;
               end
           else 
               begin
                    mem_address <= mem_address+1;
                    txdone_flag <= 0;
               end              
         end
     
     if (mem_address < written_mem_address && SW[1]== 1)
     begin
        transmit <= 1;    
        serial_transmit_reg <= pixels_tree1[mem_address];    
     end
     else if (mem_address == written_mem_address && SW[1]== 1)
     begin 
        transmit <= 1;   
        serial_transmit_reg <= Label;    
     end
     else
     begin
        transmit <=0; 
     end 
	  
	  if (SW[2] == 1)
         begin
				seg7_disp_off_signal <= 1;
         end
end

uart_tx T1 (.i_Clock(CLOCK_50), .i_Tx_DV(transmit), .i_Tx_Byte(serial_transmit_reg), .o_Tx_Active(), .o_Tx_Serial(GPIO[1]), .o_Tx_Done(tick) );

assign Label = (Label_tree_1 & Label_tree_2)  | (Label_tree_2 & Label_tree_3) | (Label_tree_3 & Label_tree_1);

always @ (posedge CLOCK_50)
    begin
    if (SW[0] == 1)
         begin
            state_tree1 <= 0;
				state_tree2 <= 0;
				state_tree3 <= 0;
         end
         
    if (Allpixel_receive_complete==1)
        begin
 case (state_tree1)        


16'd0:if (pixels_tree1[3] <= 706) begin state_tree1<=1; end  else begin state_tree1<=250; end 
 
16'd1:if (pixels_tree1[2] <= 738) begin state_tree1<=2; end  else begin state_tree1<=127; end 
 
16'd2:if (pixels_tree1[1] <= 332) begin state_tree1<=3; end  else begin state_tree1<=66; end 
 
16'd3:if (pixels_tree1[0] <= 0) begin state_tree1<=4; end  else begin state_tree1<=35; end 
 
16'd4:if (pixels_tree1[2] <= 625) begin state_tree1<=5; end  else begin state_tree1<=20; end 
 
16'd5:if (pixels_tree1[2] <= 543) begin state_tree1<=6; end  else begin state_tree1<=13; end 
 
16'd6:if (pixels_tree1[2] <= 446) begin state_tree1<=7; end  else begin state_tree1<=10; end 
 
16'd7:if (pixels_tree1[3] <= 478) begin Label_tree_1<= 8; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd10:if (pixels_tree1[2] <= 511) begin Label_tree_1<= 6; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 5; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd13:if (pixels_tree1[1] <= 300) begin state_tree1<=14; end  else begin state_tree1<=17; end 
 
16'd14:if (pixels_tree1[2] <= 560) begin Label_tree_1<= 5; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 0; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd17:if (pixels_tree1[2] <= 576) begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd20:if (pixels_tree1[1] <= 154) begin state_tree1<=21; end  else begin state_tree1<=28; end 
 
16'd21:if (pixels_tree1[2] <= 690) begin state_tree1<=22; end  else begin state_tree1<=25; end 
 
16'd22:if (pixels_tree1[1] <= 40) begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd25:if (pixels_tree1[1] <= 40) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd28:if (pixels_tree1[2] <= 673) begin state_tree1<=29; end  else begin state_tree1<=32; end 
 
16'd29:if (pixels_tree1[1] <= 251) begin Label_tree_1<= 10; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd32:if (pixels_tree1[1] <= 300) begin Label_tree_1<= 6; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd35:if (pixels_tree1[2] <= 641) begin state_tree1<=36; end  else begin state_tree1<=51; end 
 
16'd36:if (pixels_tree1[2] <= 592) begin state_tree1<=37; end  else begin state_tree1<=44; end 
 
16'd37:if (pixels_tree1[2] <= 478) begin state_tree1<=38; end  else begin state_tree1<=41; end 
 
16'd38:if (pixels_tree1[2] <= 430) begin Label_tree_1<= 9; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 8; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd41:if (pixels_tree1[1] <= 284) begin Label_tree_1<= 0; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 5; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd44:if (pixels_tree1[3] <= 560) begin state_tree1<=45; end  else begin state_tree1<=48; end 
 
16'd45:if (pixels_tree1[1] <= 170) begin Label_tree_1<= 0; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 0; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd48:if (pixels_tree1[2] <= 608) begin Label_tree_1<= 0; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 0; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd51:if (pixels_tree1[1] <= 202) begin state_tree1<=52; end  else begin state_tree1<=59; end 
 
16'd52:if (pixels_tree1[1] <= 8) begin state_tree1<=53; end  else begin state_tree1<=56; end 
 
16'd53:if (pixels_tree1[2] <= 657) begin Label_tree_1<= 0; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd56:if (pixels_tree1[2] <= 690) begin Label_tree_1<= 0; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd59:if (pixels_tree1[3] <= 625) begin state_tree1<=60; end  else begin state_tree1<=63; end 
 
16'd60:if (pixels_tree1[1] <= 284) begin Label_tree_1<= 5; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd63:if (pixels_tree1[2] <= 673) begin Label_tree_1<= 6; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd66:if (pixels_tree1[1] <= 608) begin state_tree1<=67; end  else begin state_tree1<=98; end 
 
16'd67:if (pixels_tree1[1] <= 478) begin state_tree1<=68; end  else begin state_tree1<=83; end 
 
16'd68:if (pixels_tree1[0] <= 0) begin state_tree1<=69; end  else begin state_tree1<=76; end 
 
16'd69:if (pixels_tree1[2] <= 267) begin state_tree1<=70; end  else begin state_tree1<=73; end 
 
16'd70:if (pixels_tree1[1] <= 430) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 13; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd73:if (pixels_tree1[1] <= 365) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd76:if (pixels_tree1[1] <= 413) begin state_tree1<=77; end  else begin state_tree1<=80; end 
 
16'd77:if (pixels_tree1[3] <= 641) begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd80:if (pixels_tree1[2] <= 527) begin Label_tree_1<= 9; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd83:if (pixels_tree1[2] <= 300) begin state_tree1<=84; end  else begin state_tree1<=91; end 
 
16'd84:if (pixels_tree1[0] <= 0) begin state_tree1<=85; end  else begin state_tree1<=88; end 
 
16'd85:if (pixels_tree1[1] <= 576) begin Label_tree_1<= 13; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd88:if (pixels_tree1[3] <= 608) begin Label_tree_1<= 6; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd91:if (pixels_tree1[3] <= 641) begin state_tree1<=92; end  else begin state_tree1<=95; end 
 
16'd92:if (pixels_tree1[1] <= 527) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd95:if (pixels_tree1[0] <= 0) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd98:if (pixels_tree1[2] <= 495) begin state_tree1<=99; end  else begin state_tree1<=114; end 
 
16'd99:if (pixels_tree1[1] <= 722) begin state_tree1<=100; end  else begin state_tree1<=107; end 
 
16'd100:if (pixels_tree1[0] <= 0) begin state_tree1<=101; end  else begin state_tree1<=104; end 
 
16'd101:if (pixels_tree1[2] <= 478) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd104:if (pixels_tree1[2] <= 446) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd107:if (pixels_tree1[0] <= 0) begin state_tree1<=108; end  else begin state_tree1<=111; end 
 
16'd108:if (pixels_tree1[1] <= 917) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd111:if (pixels_tree1[2] <= 251) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 4; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd114:if (pixels_tree1[2] <= 641) begin state_tree1<=115; end  else begin state_tree1<=122; end 
 
16'd115:if (pixels_tree1[1] <= 787) begin state_tree1<=116; end  else begin state_tree1<=119; end 
 
16'd116:if (pixels_tree1[0] <= 0) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd119:if (pixels_tree1[0] <= 0) begin Label_tree_1<= 4; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 4; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd122:if (pixels_tree1[3] <= 373) begin Label_tree_1<= 6; state_tree1<=0;ml_inference_completed_tree1<=1; end  else begin state_tree1<=124; end 

16'd124:if (pixels_tree1[1] <= 941) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd127:if (pixels_tree1[3] <= 560) begin state_tree1<=128; end  else begin state_tree1<=189; end 
 
16'd128:if (pixels_tree1[0] <= 0) begin state_tree1<=129; end  else begin state_tree1<=160; end 
 
16'd129:if (pixels_tree1[1] <= 235) begin state_tree1<=130; end  else begin state_tree1<=145; end 
 
16'd130:if (pixels_tree1[1] <= 186) begin state_tree1<=131; end  else begin state_tree1<=138; end 
 
16'd131:if (pixels_tree1[3] <= 511) begin state_tree1<=132; end  else begin state_tree1<=135; end 
 
16'd132:if (pixels_tree1[1] <= 56) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd135:if (pixels_tree1[1] <= 8) begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd138:if (pixels_tree1[2] <= 754) begin state_tree1<=139; end  else begin state_tree1<=142; end 
 
16'd139:if (pixels_tree1[3] <= 486) begin Label_tree_1<= 10; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd142:if (pixels_tree1[1] <= 202) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd145:if (pixels_tree1[1] <= 300) begin state_tree1<=146; end  else begin state_tree1<=153; end 
 
16'd146:if (pixels_tree1[2] <= 771) begin state_tree1<=147; end  else begin state_tree1<=150; end 
 
16'd147:if (pixels_tree1[2] <= 754) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd150:if (pixels_tree1[1] <= 284) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd153:if (pixels_tree1[2] <= 917) begin state_tree1<=154; end  else begin state_tree1<=157; end 
 
16'd154:if (pixels_tree1[3] <= 527) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd157:if (pixels_tree1[1] <= 413) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd160:if (pixels_tree1[1] <= 284) begin state_tree1<=161; end  else begin state_tree1<=174; end 
 
16'd161:if (pixels_tree1[2] <= 787) begin state_tree1<=162; end  else begin state_tree1<=169; end 
 
16'd162:if (pixels_tree1[2] <= 771) begin state_tree1<=163; end  else begin state_tree1<=166; end 
 
16'd163:if (pixels_tree1[3] <= 543) begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 5; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd166:if (pixels_tree1[1] <= 267) begin Label_tree_1<= 5; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 5; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd169:if (pixels_tree1[1] <= 145) begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end  else begin state_tree1<=171; end 

16'd171:if (pixels_tree1[3] <= 519) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 0; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd174:if (pixels_tree1[1] <= 625) begin state_tree1<=175; end  else begin state_tree1<=182; end 
 
16'd175:if (pixels_tree1[1] <= 365) begin state_tree1<=176; end  else begin state_tree1<=179; end 
 
16'd176:if (pixels_tree1[1] <= 332) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd179:if (pixels_tree1[2] <= 868) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd182:if (pixels_tree1[1] <= 657) begin state_tree1<=183; end  else begin state_tree1<=186; end 
 
16'd183:if (pixels_tree1[3] <= 421) begin Label_tree_1<= 6; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd186:if (pixels_tree1[3] <= 413) begin Label_tree_1<= 6; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd189:if (pixels_tree1[1] <= 495) begin state_tree1<=190; end  else begin state_tree1<=221; end 
 
16'd190:if (pixels_tree1[2] <= 771) begin state_tree1<=191; end  else begin state_tree1<=206; end 
 
16'd191:if (pixels_tree1[0] <= 0) begin state_tree1<=192; end  else begin state_tree1<=199; end 
 
16'd192:if (pixels_tree1[1] <= 316) begin state_tree1<=193; end  else begin state_tree1<=196; end 
 
16'd193:if (pixels_tree1[2] <= 754) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd196:if (pixels_tree1[3] <= 641) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd199:if (pixels_tree1[3] <= 673) begin state_tree1<=200; end  else begin state_tree1<=203; end 
 
16'd200:if (pixels_tree1[1] <= 251) begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 5; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd203:if (pixels_tree1[2] <= 754) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 6; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd206:if (pixels_tree1[1] <= 316) begin state_tree1<=207; end  else begin state_tree1<=214; end 
 
16'd207:if (pixels_tree1[2] <= 868) begin state_tree1<=208; end  else begin state_tree1<=211; end 
 
16'd208:if (pixels_tree1[0] <= 0) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd211:if (pixels_tree1[0] <= 0) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd214:if (pixels_tree1[3] <= 673) begin state_tree1<=215; end  else begin state_tree1<=218; end 
 
16'd215:if (pixels_tree1[0] <= 0) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd218:if (pixels_tree1[2] <= 868) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd221:if (pixels_tree1[0] <= 0) begin state_tree1<=222; end  else begin state_tree1<=237; end 
 
16'd222:if (pixels_tree1[3] <= 608) begin state_tree1<=223; end  else begin state_tree1<=230; end 
 
16'd223:if (pixels_tree1[3] <= 592) begin state_tree1<=224; end  else begin state_tree1<=227; end 
 
16'd224:if (pixels_tree1[3] <= 576) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd227:if (pixels_tree1[1] <= 543) begin Label_tree_1<= 8; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd230:if (pixels_tree1[1] <= 657) begin state_tree1<=231; end  else begin state_tree1<=234; end 
 
16'd231:if (pixels_tree1[2] <= 836) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd234:if (pixels_tree1[2] <= 852) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd237:if (pixels_tree1[3] <= 641) begin state_tree1<=238; end  else begin state_tree1<=243; end 
 
16'd238:if (pixels_tree1[2] <= 901) begin state_tree1<=239; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
 
16'd239:if (pixels_tree1[1] <= 641) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd243:if (pixels_tree1[2] <= 819) begin state_tree1<=244; end  else begin state_tree1<=247; end 
 
16'd244:if (pixels_tree1[2] <= 787) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd247:if (pixels_tree1[3] <= 673) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd250:if (pixels_tree1[1] <= 673) begin state_tree1<=251; end  else begin state_tree1<=376; end 
 
16'd251:if (pixels_tree1[0] <= 0) begin state_tree1<=252; end  else begin state_tree1<=315; end 
 
16'd252:if (pixels_tree1[2] <= 673) begin state_tree1<=253; end  else begin state_tree1<=284; end 
 
16'd253:if (pixels_tree1[1] <= 495) begin state_tree1<=254; end  else begin state_tree1<=269; end 
 
16'd254:if (pixels_tree1[3] <= 803) begin state_tree1<=255; end  else begin state_tree1<=262; end 
 
16'd255:if (pixels_tree1[3] <= 771) begin state_tree1<=256; end  else begin state_tree1<=259; end 
 
16'd256:if (pixels_tree1[1] <= 462) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 4; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd259:if (pixels_tree1[2] <= 495) begin Label_tree_1<= 3; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 9; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd262:if (pixels_tree1[1] <= 478) begin state_tree1<=263; end  else begin state_tree1<=266; end 
 
16'd263:if (pixels_tree1[3] <= 852) begin Label_tree_1<= 3; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 4; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd266:if (pixels_tree1[2] <= 608) begin Label_tree_1<= 11; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 13; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd269:if (pixels_tree1[2] <= 543) begin state_tree1<=270; end  else begin state_tree1<=277; end 
 
16'd270:if (pixels_tree1[1] <= 625) begin state_tree1<=271; end  else begin state_tree1<=274; end 
 
16'd271:if (pixels_tree1[3] <= 819) begin Label_tree_1<= 13; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 13; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd274:if (pixels_tree1[1] <= 657) begin Label_tree_1<= 11; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 4; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd277:if (pixels_tree1[3] <= 787) begin state_tree1<=278; end  else begin state_tree1<=281; end 
 
16'd278:if (pixels_tree1[3] <= 754) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 3; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd281:if (pixels_tree1[2] <= 641) begin Label_tree_1<= 13; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 13; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd284:if (pixels_tree1[3] <= 787) begin state_tree1<=285; end  else begin state_tree1<=300; end 
 
16'd285:if (pixels_tree1[2] <= 722) begin state_tree1<=286; end  else begin state_tree1<=293; end 
 
16'd286:if (pixels_tree1[3] <= 738) begin state_tree1<=287; end  else begin state_tree1<=290; end 
 
16'd287:if (pixels_tree1[3] <= 722) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd290:if (pixels_tree1[1] <= 576) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 13; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd293:if (pixels_tree1[1] <= 495) begin state_tree1<=294; end  else begin state_tree1<=297; end 
 
16'd294:if (pixels_tree1[1] <= 365) begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 11; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd297:if (pixels_tree1[2] <= 787) begin Label_tree_1<= 12; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 12; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd300:if (pixels_tree1[2] <= 836) begin state_tree1<=301; end  else begin state_tree1<=308; end 
 
16'd301:if (pixels_tree1[1] <= 495) begin state_tree1<=302; end  else begin state_tree1<=305; end 
 
16'd302:if (pixels_tree1[1] <= 446) begin Label_tree_1<= 4; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 3; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd305:if (pixels_tree1[1] <= 543) begin Label_tree_1<= 13; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 13; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd308:if (pixels_tree1[2] <= 884) begin state_tree1<=309; end  else begin state_tree1<=312; end 
 
16'd309:if (pixels_tree1[2] <= 852) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd312:if (pixels_tree1[1] <= 592) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd315:if (pixels_tree1[3] <= 803) begin state_tree1<=316; end  else begin state_tree1<=345; end 
 
16'd316:if (pixels_tree1[2] <= 446) begin state_tree1<=317; end  else begin state_tree1<=330; end 
 
16'd317:if (pixels_tree1[1] <= 495) begin state_tree1<=318; end  else begin state_tree1<=325; end 
 
16'd318:if (pixels_tree1[2] <= 292) begin state_tree1<=319; end  else begin state_tree1<=322; end 
 
16'd319:if (pixels_tree1[1] <= 446) begin Label_tree_1<= 9; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 6; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd322:if (pixels_tree1[3] <= 738) begin Label_tree_1<= 9; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 3; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd325:if (pixels_tree1[2] <= 154) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end  else begin state_tree1<=327; end 

16'd327:if (pixels_tree1[3] <= 771) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd330:if (pixels_tree1[1] <= 332) begin state_tree1<=331; end  else begin state_tree1<=338; end 
 
16'd331:if (pixels_tree1[1] <= 251) begin state_tree1<=332; end  else begin state_tree1<=335; end 
 
16'd332:if (pixels_tree1[2] <= 657) begin Label_tree_1<= 6; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 2; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd335:if (pixels_tree1[2] <= 738) begin Label_tree_1<= 8; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd338:if (pixels_tree1[3] <= 754) begin state_tree1<=339; end  else begin state_tree1<=342; end 
 
16'd339:if (pixels_tree1[2] <= 852) begin Label_tree_1<= 11; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd342:if (pixels_tree1[1] <= 495) begin Label_tree_1<= 11; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 3; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd345:if (pixels_tree1[2] <= 365) begin state_tree1<=346; end  else begin state_tree1<=361; end 
 
16'd346:if (pixels_tree1[1] <= 543) begin state_tree1<=347; end  else begin state_tree1<=354; end 
 
16'd347:if (pixels_tree1[3] <= 836) begin state_tree1<=348; end  else begin state_tree1<=351; end 
 
16'd348:if (pixels_tree1[1] <= 478) begin Label_tree_1<= 3; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 3; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd351:if (pixels_tree1[1] <= 462) begin Label_tree_1<= 9; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd354:if (pixels_tree1[2] <= 186) begin state_tree1<=355; end  else begin state_tree1<=358; end 
 
16'd355:if (pixels_tree1[1] <= 600) begin Label_tree_1<= 9; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd358:if (pixels_tree1[3] <= 998) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 6; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd361:if (pixels_tree1[1] <= 543) begin state_tree1<=362; end  else begin state_tree1<=369; end 
 
16'd362:if (pixels_tree1[2] <= 543) begin state_tree1<=363; end  else begin state_tree1<=366; end 
 
16'd363:if (pixels_tree1[3] <= 852) begin Label_tree_1<= 3; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 3; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd366:if (pixels_tree1[1] <= 478) begin Label_tree_1<= 8; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 3; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd369:if (pixels_tree1[2] <= 641) begin state_tree1<=370; end  else begin state_tree1<=373; end 
 
16'd370:if (pixels_tree1[3] <= 884) begin Label_tree_1<= 11; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd373:if (pixels_tree1[2] <= 827) begin Label_tree_1<= 9; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd376:if (pixels_tree1[1] <= 754) begin state_tree1<=377; end  else begin state_tree1<=434; end 
 
16'd377:if (pixels_tree1[0] <= 0) begin state_tree1<=378; end  else begin state_tree1<=407; end 
 
16'd378:if (pixels_tree1[1] <= 706) begin state_tree1<=379; end  else begin state_tree1<=394; end 
 
16'd379:if (pixels_tree1[2] <= 527) begin state_tree1<=380; end  else begin state_tree1<=387; end 
 
16'd380:if (pixels_tree1[2] <= 413) begin state_tree1<=381; end  else begin state_tree1<=384; end 
 
16'd381:if (pixels_tree1[3] <= 819) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd384:if (pixels_tree1[2] <= 462) begin Label_tree_1<= 4; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 4; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd387:if (pixels_tree1[2] <= 738) begin state_tree1<=388; end  else begin state_tree1<=391; end 
 
16'd388:if (pixels_tree1[2] <= 608) begin Label_tree_1<= 11; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd391:if (pixels_tree1[2] <= 819) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd394:if (pixels_tree1[2] <= 722) begin state_tree1<=395; end  else begin state_tree1<=402; end 
 
16'd395:if (pixels_tree1[3] <= 819) begin state_tree1<=396; end  else begin state_tree1<=399; end 
 
16'd396:if (pixels_tree1[2] <= 430) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 4; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd399:if (pixels_tree1[3] <= 892) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd402:if (pixels_tree1[2] <= 771) begin state_tree1<=403; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
 
16'd403:if (pixels_tree1[1] <= 722) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd407:if (pixels_tree1[2] <= 690) begin state_tree1<=408; end  else begin state_tree1<=423; end 
 
16'd408:if (pixels_tree1[1] <= 690) begin state_tree1<=409; end  else begin state_tree1<=416; end 
 
16'd409:if (pixels_tree1[2] <= 389) begin state_tree1<=410; end  else begin state_tree1<=413; end 
 
16'd410:if (pixels_tree1[2] <= 153) begin Label_tree_1<= 9; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd413:if (pixels_tree1[3] <= 836) begin Label_tree_1<= 11; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 0; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd416:if (pixels_tree1[1] <= 738) begin state_tree1<=417; end  else begin state_tree1<=420; end 
 
16'd417:if (pixels_tree1[2] <= 349) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 11; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd420:if (pixels_tree1[2] <= 397) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 11; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd423:if (pixels_tree1[3] <= 803) begin state_tree1<=424; end  else begin state_tree1<=429; end 
 
16'd424:if (pixels_tree1[2] <= 868) begin state_tree1<=425; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 
 
16'd425:if (pixels_tree1[1] <= 690) begin Label_tree_1<= 3; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 3; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd429:if (pixels_tree1[3] <= 836) begin Label_tree_1<= 9; state_tree1<=0;ml_inference_completed_tree1<=1; end  else begin state_tree1<=431; end 

16'd431:if (pixels_tree1[3] <= 860) begin Label_tree_1<= 4; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd434:if (pixels_tree1[2] <= 430) begin state_tree1<=435; end  else begin state_tree1<=452; end 
 
16'd435:if (pixels_tree1[1] <= 771) begin state_tree1<=436; end  else begin state_tree1<=443; end 
 
16'd436:if (pixels_tree1[2] <= 364) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end  else begin state_tree1<=438; end 

16'd438:if (pixels_tree1[3] <= 803) begin state_tree1<=439; end 
       else begin Label_tree_1<= 6; state_tree1<=0;ml_inference_completed_tree1<=1; end 
 
16'd439:if (pixels_tree1[3] <= 771) begin Label_tree_1<= 11; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 11; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd443:if (pixels_tree1[0] <= 0) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end  else begin state_tree1<=445; end 

16'd445:if (pixels_tree1[2] <= 389) begin state_tree1<=446; end  else begin state_tree1<=449; end 
 
16'd446:if (pixels_tree1[1] <= 819) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 9; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd449:if (pixels_tree1[1] <= 819) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 4; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd452:if (pixels_tree1[1] <= 836) begin state_tree1<=453; end  else begin state_tree1<=468; end 
 
16'd453:if (pixels_tree1[3] <= 771) begin state_tree1<=454; end  else begin state_tree1<=461; end 
 
16'd454:if (pixels_tree1[2] <= 673) begin state_tree1<=455; end  else begin state_tree1<=458; end 
 
16'd455:if (pixels_tree1[0] <= 0) begin Label_tree_1<= 4; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 4; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd458:if (pixels_tree1[0] <= 0) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd461:if (pixels_tree1[0] <= 0) begin state_tree1<=462; end  else begin state_tree1<=465; end 
 
16'd462:if (pixels_tree1[2] <= 649) begin Label_tree_1<= 4; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd465:if (pixels_tree1[1] <= 771) begin Label_tree_1<= 11; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 6; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd468:if (pixels_tree1[3] <= 754) begin state_tree1<=469; end  else begin state_tree1<=476; end 
 
16'd469:if (pixels_tree1[1] <= 852) begin state_tree1<=470; end  else begin state_tree1<=473; end 
 
16'd470:if (pixels_tree1[3] <= 722) begin Label_tree_1<= 4; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd473:if (pixels_tree1[0] <= 0) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd476:if (pixels_tree1[2] <= 576) begin state_tree1<=477; end  else begin state_tree1<=480; end 
 
16'd477:if (pixels_tree1[3] <= 771) begin Label_tree_1<= 4; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 

16'd480:if (pixels_tree1[0] <= 0) begin Label_tree_1<= 1; state_tree1<=0;ml_inference_completed_tree1<=1; end 
       else begin Label_tree_1<= 7; state_tree1<=0;ml_inference_completed_tree1<=1; end 

		 endcase
		  
   case (state_tree2)


16'd0:if (pixels_tree2[3] <= 722) begin state_tree2<=1; end  else begin state_tree2<=232; end 
 
16'd1:if (pixels_tree2[2] <= 738) begin state_tree2<=2; end  else begin state_tree2<=121; end 
 
16'd2:if (pixels_tree2[3] <= 625) begin state_tree2<=3; end  else begin state_tree2<=66; end 
 
16'd3:if (pixels_tree2[2] <= 511) begin state_tree2<=4; end  else begin state_tree2<=35; end 
 
16'd4:if (pixels_tree2[1] <= 560) begin state_tree2<=5; end  else begin state_tree2<=20; end 
 
16'd5:if (pixels_tree2[3] <= 576) begin state_tree2<=6; end  else begin state_tree2<=13; end 
 
16'd6:if (pixels_tree2[1] <= 316) begin state_tree2<=7; end  else begin state_tree2<=10; end 
 
16'd7:if (pixels_tree2[0] <= 0) begin Label_tree_2<= 6; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd10:if (pixels_tree2[2] <= 235) begin Label_tree_2<= 6; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd13:if (pixels_tree2[1] <= 283) begin state_tree2<=14; end  else begin state_tree2<=17; end 
 
16'd14:if (pixels_tree2[1] <= 64) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 6; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd17:if (pixels_tree2[0] <= 0) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd20:if (pixels_tree2[0] <= 0) begin state_tree2<=21; end  else begin state_tree2<=28; end 
 
16'd21:if (pixels_tree2[1] <= 738) begin state_tree2<=22; end  else begin state_tree2<=25; end 
 
16'd22:if (pixels_tree2[3] <= 413) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd25:if (pixels_tree2[2] <= 202) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd28:if (pixels_tree2[2] <= 430) begin state_tree2<=29; end  else begin state_tree2<=32; end 
 
16'd29:if (pixels_tree2[3] <= 592) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd32:if (pixels_tree2[1] <= 803) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd35:if (pixels_tree2[1] <= 300) begin state_tree2<=36; end  else begin state_tree2<=51; end 
 
16'd36:if (pixels_tree2[1] <= 89) begin state_tree2<=37; end  else begin state_tree2<=44; end 
 
16'd37:if (pixels_tree2[2] <= 657) begin state_tree2<=38; end  else begin state_tree2<=41; end 
 
16'd38:if (pixels_tree2[2] <= 576) begin Label_tree_2<= 5; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 0; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd41:if (pixels_tree2[1] <= 24) begin Label_tree_2<= 2; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 2; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd44:if (pixels_tree2[0] <= 0) begin state_tree2<=45; end  else begin state_tree2<=48; end 
 
16'd45:if (pixels_tree2[2] <= 625) begin Label_tree_2<= 0; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 0; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd48:if (pixels_tree2[1] <= 219) begin Label_tree_2<= 0; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 0; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd51:if (pixels_tree2[1] <= 690) begin state_tree2<=52; end  else begin state_tree2<=59; end 
 
16'd52:if (pixels_tree2[1] <= 397) begin state_tree2<=53; end  else begin state_tree2<=56; end 
 
16'd53:if (pixels_tree2[3] <= 478) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 2; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd56:if (pixels_tree2[3] <= 284) begin Label_tree_2<= 6; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd59:if (pixels_tree2[1] <= 819) begin state_tree2<=60; end  else begin state_tree2<=63; end 
 
16'd60:if (pixels_tree2[0] <= 0) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd63:if (pixels_tree2[3] <= 560) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd66:if (pixels_tree2[0] <= 0) begin state_tree2<=67; end  else begin state_tree2<=92; end 
 
16'd67:if (pixels_tree2[2] <= 316) begin state_tree2<=68; end  else begin state_tree2<=77; end 
 
16'd68:if (pixels_tree2[1] <= 608) begin state_tree2<=69; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
 
16'd69:if (pixels_tree2[2] <= 284) begin state_tree2<=70; end  else begin state_tree2<=73; end 
 
16'd70:if (pixels_tree2[2] <= 137) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 13; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd73:if (pixels_tree2[2] <= 300) begin Label_tree_2<= 13; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 13; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd77:if (pixels_tree2[1] <= 543) begin state_tree2<=78; end  else begin state_tree2<=85; end 
 
16'd78:if (pixels_tree2[1] <= 332) begin state_tree2<=79; end  else begin state_tree2<=82; end 
 
16'd79:if (pixels_tree2[2] <= 706) begin Label_tree_2<= 6; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd82:if (pixels_tree2[2] <= 560) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd85:if (pixels_tree2[1] <= 771) begin state_tree2<=86; end  else begin state_tree2<=89; end 
 
16'd86:if (pixels_tree2[2] <= 543) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd89:if (pixels_tree2[1] <= 884) begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd92:if (pixels_tree2[1] <= 722) begin state_tree2<=93; end  else begin state_tree2<=108; end 
 
16'd93:if (pixels_tree2[2] <= 495) begin state_tree2<=94; end  else begin state_tree2<=101; end 
 
16'd94:if (pixels_tree2[1] <= 584) begin state_tree2<=95; end  else begin state_tree2<=98; end 
 
16'd95:if (pixels_tree2[3] <= 673) begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd98:if (pixels_tree2[1] <= 657) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd101:if (pixels_tree2[3] <= 673) begin state_tree2<=102; end  else begin state_tree2<=105; end 
 
16'd102:if (pixels_tree2[1] <= 381) begin Label_tree_2<= 0; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd105:if (pixels_tree2[3] <= 706) begin Label_tree_2<= 6; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 8; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd108:if (pixels_tree2[1] <= 884) begin state_tree2<=109; end  else begin state_tree2<=116; end 
 
16'd109:if (pixels_tree2[2] <= 251) begin state_tree2<=110; end  else begin state_tree2<=113; end 
 
16'd110:if (pixels_tree2[2] <= 186) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd113:if (pixels_tree2[2] <= 641) begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd116:if (pixels_tree2[2] <= 624) begin state_tree2<=117; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
 
16'd117:if (pixels_tree2[1] <= 941) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd121:if (pixels_tree2[1] <= 284) begin state_tree2<=122; end  else begin state_tree2<=171; end 
 
16'd122:if (pixels_tree2[0] <= 0) begin state_tree2<=123; end  else begin state_tree2<=146; end 
 
16'd123:if (pixels_tree2[2] <= 771) begin state_tree2<=124; end  else begin state_tree2<=137; end 
 
16'd124:if (pixels_tree2[3] <= 673) begin state_tree2<=125; end  else begin state_tree2<=132; end 
 
16'd125:if (pixels_tree2[3] <= 462) begin state_tree2<=126; end  else begin state_tree2<=129; end 
 
16'd126:if (pixels_tree2[3] <= 446) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd129:if (pixels_tree2[1] <= 267) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 6; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd132:if (pixels_tree2[1] <= 113) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end  else begin state_tree2<=134; end 

16'd134:if (pixels_tree2[1] <= 202) begin Label_tree_2<= 0; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 2; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd137:if (pixels_tree2[1] <= 40) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end  else begin state_tree2<=139; end 

16'd139:if (pixels_tree2[2] <= 836) begin state_tree2<=140; end  else begin state_tree2<=143; end 
 
16'd140:if (pixels_tree2[1] <= 251) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd143:if (pixels_tree2[2] <= 933) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd146:if (pixels_tree2[1] <= 170) begin state_tree2<=147; end  else begin state_tree2<=156; end 
 
16'd147:if (pixels_tree2[1] <= 48) begin state_tree2<=148; end  else begin state_tree2<=151; end 
 
16'd148:if (pixels_tree2[3] <= 641) begin Label_tree_2<= 2; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd151:if (pixels_tree2[3] <= 649) begin state_tree2<=152; end 
       else begin Label_tree_2<= 2; state_tree2<=0;ml_inference_completed_tree2<=1; end 
 
16'd152:if (pixels_tree2[1] <= 154) begin Label_tree_2<= 0; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 10; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd156:if (pixels_tree2[3] <= 625) begin state_tree2<=157; end  else begin state_tree2<=164; end 
 
16'd157:if (pixels_tree2[2] <= 811) begin state_tree2<=158; end  else begin state_tree2<=161; end 
 
16'd158:if (pixels_tree2[2] <= 771) begin Label_tree_2<= 5; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 5; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd161:if (pixels_tree2[2] <= 852) begin Label_tree_2<= 0; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 0; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd164:if (pixels_tree2[1] <= 267) begin state_tree2<=165; end  else begin state_tree2<=168; end 
 
16'd165:if (pixels_tree2[3] <= 673) begin Label_tree_2<= 2; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd168:if (pixels_tree2[3] <= 641) begin Label_tree_2<= 2; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd171:if (pixels_tree2[3] <= 560) begin state_tree2<=172; end  else begin state_tree2<=201; end 
 
16'd172:if (pixels_tree2[2] <= 917) begin state_tree2<=173; end  else begin state_tree2<=188; end 
 
16'd173:if (pixels_tree2[2] <= 771) begin state_tree2<=174; end  else begin state_tree2<=181; end 
 
16'd174:if (pixels_tree2[0] <= 0) begin state_tree2<=175; end  else begin state_tree2<=178; end 
 
16'd175:if (pixels_tree2[3] <= 332) begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd178:if (pixels_tree2[2] <= 754) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd181:if (pixels_tree2[1] <= 560) begin state_tree2<=182; end  else begin state_tree2<=185; end 
 
16'd182:if (pixels_tree2[2] <= 819) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd185:if (pixels_tree2[0] <= 0) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd188:if (pixels_tree2[3] <= 543) begin state_tree2<=189; end  else begin state_tree2<=194; end 
 
16'd189:if (pixels_tree2[3] <= 478) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end  else begin state_tree2<=191; end 

16'd191:if (pixels_tree2[1] <= 787) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd194:if (pixels_tree2[1] <= 365) begin state_tree2<=195; end  else begin state_tree2<=198; end 
 
16'd195:if (pixels_tree2[1] <= 324) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 2; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd198:if (pixels_tree2[2] <= 966) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd201:if (pixels_tree2[3] <= 690) begin state_tree2<=202; end  else begin state_tree2<=217; end 
 
16'd202:if (pixels_tree2[1] <= 495) begin state_tree2<=203; end  else begin state_tree2<=210; end 
 
16'd203:if (pixels_tree2[2] <= 771) begin state_tree2<=204; end  else begin state_tree2<=207; end 
 
16'd204:if (pixels_tree2[1] <= 332) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd207:if (pixels_tree2[3] <= 608) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd210:if (pixels_tree2[2] <= 884) begin state_tree2<=211; end  else begin state_tree2<=214; end 
 
16'd211:if (pixels_tree2[1] <= 673) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd214:if (pixels_tree2[3] <= 657) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd217:if (pixels_tree2[1] <= 495) begin state_tree2<=218; end  else begin state_tree2<=225; end 
 
16'd218:if (pixels_tree2[3] <= 706) begin state_tree2<=219; end  else begin state_tree2<=222; end 
 
16'd219:if (pixels_tree2[0] <= 0) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd222:if (pixels_tree2[2] <= 868) begin Label_tree_2<= 11; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd225:if (pixels_tree2[2] <= 901) begin state_tree2<=226; end  else begin state_tree2<=229; end 
 
16'd226:if (pixels_tree2[1] <= 641) begin Label_tree_2<= 12; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd229:if (pixels_tree2[2] <= 1014) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd232:if (pixels_tree2[0] <= 0) begin state_tree2<=233; end  else begin state_tree2<=350; end 
 
16'd233:if (pixels_tree2[1] <= 673) begin state_tree2<=234; end  else begin state_tree2<=297; end 
 
16'd234:if (pixels_tree2[2] <= 722) begin state_tree2<=235; end  else begin state_tree2<=266; end 
 
16'd235:if (pixels_tree2[3] <= 819) begin state_tree2<=236; end  else begin state_tree2<=251; end 
 
16'd236:if (pixels_tree2[1] <= 495) begin state_tree2<=237; end  else begin state_tree2<=244; end 
 
16'd237:if (pixels_tree2[1] <= 381) begin state_tree2<=238; end  else begin state_tree2<=241; end 
 
16'd238:if (pixels_tree2[3] <= 771) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd241:if (pixels_tree2[2] <= 381) begin Label_tree_2<= 6; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd244:if (pixels_tree2[1] <= 625) begin state_tree2<=245; end  else begin state_tree2<=248; end 
 
16'd245:if (pixels_tree2[2] <= 430) begin Label_tree_2<= 13; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 13; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd248:if (pixels_tree2[2] <= 592) begin Label_tree_2<= 11; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 13; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd251:if (pixels_tree2[2] <= 527) begin state_tree2<=252; end  else begin state_tree2<=259; end 
 
16'd252:if (pixels_tree2[3] <= 852) begin state_tree2<=253; end  else begin state_tree2<=256; end 
 
16'd253:if (pixels_tree2[1] <= 625) begin Label_tree_2<= 13; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 11; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd256:if (pixels_tree2[1] <= 543) begin Label_tree_2<= 6; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 13; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd259:if (pixels_tree2[1] <= 495) begin state_tree2<=260; end  else begin state_tree2<=263; end 
 
16'd260:if (pixels_tree2[2] <= 592) begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 3; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd263:if (pixels_tree2[3] <= 901) begin Label_tree_2<= 13; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd266:if (pixels_tree2[3] <= 787) begin state_tree2<=267; end  else begin state_tree2<=282; end 
 
16'd267:if (pixels_tree2[1] <= 495) begin state_tree2<=268; end  else begin state_tree2<=275; end 
 
16'd268:if (pixels_tree2[1] <= 381) begin state_tree2<=269; end  else begin state_tree2<=272; end 
 
16'd269:if (pixels_tree2[2] <= 754) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd272:if (pixels_tree2[1] <= 462) begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 11; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd275:if (pixels_tree2[2] <= 803) begin state_tree2<=276; end  else begin state_tree2<=279; end 
 
16'd276:if (pixels_tree2[3] <= 771) begin Label_tree_2<= 12; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 12; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd279:if (pixels_tree2[2] <= 852) begin Label_tree_2<= 12; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd282:if (pixels_tree2[3] <= 884) begin state_tree2<=283; end  else begin state_tree2<=290; end 
 
16'd283:if (pixels_tree2[2] <= 787) begin state_tree2<=284; end  else begin state_tree2<=287; end 
 
16'd284:if (pixels_tree2[3] <= 819) begin Label_tree_2<= 13; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd287:if (pixels_tree2[1] <= 251) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd290:if (pixels_tree2[3] <= 917) begin state_tree2<=291; end  else begin state_tree2<=294; end 
 
16'd291:if (pixels_tree2[2] <= 819) begin Label_tree_2<= 13; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd294:if (pixels_tree2[2] <= 852) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd297:if (pixels_tree2[2] <= 413) begin state_tree2<=298; end  else begin state_tree2<=319; end 
 
16'd298:if (pixels_tree2[1] <= 706) begin state_tree2<=299; end  else begin state_tree2<=312; end 
 
16'd299:if (pixels_tree2[3] <= 819) begin state_tree2<=300; end  else begin state_tree2<=307; end 
 
16'd300:if (pixels_tree2[3] <= 787) begin state_tree2<=301; end  else begin state_tree2<=304; end 
 
16'd301:if (pixels_tree2[3] <= 754) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd304:if (pixels_tree2[1] <= 690) begin Label_tree_2<= 11; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd307:if (pixels_tree2[1] <= 690) begin state_tree2<=308; end 
       else begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 
 
16'd308:if (pixels_tree2[3] <= 860) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd312:if (pixels_tree2[2] <= 316) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end  else begin state_tree2<=314; end 

16'd314:if (pixels_tree2[3] <= 803) begin state_tree2<=315; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
 
16'd315:if (pixels_tree2[1] <= 722) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd319:if (pixels_tree2[2] <= 690) begin state_tree2<=320; end  else begin state_tree2<=335; end 
 
16'd320:if (pixels_tree2[1] <= 754) begin state_tree2<=321; end  else begin state_tree2<=328; end 
 
16'd321:if (pixels_tree2[1] <= 706) begin state_tree2<=322; end  else begin state_tree2<=325; end 
 
16'd322:if (pixels_tree2[2] <= 527) begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 13; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd325:if (pixels_tree2[3] <= 754) begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd328:if (pixels_tree2[2] <= 462) begin state_tree2<=329; end  else begin state_tree2<=332; end 
 
16'd329:if (pixels_tree2[1] <= 811) begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd332:if (pixels_tree2[1] <= 836) begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd335:if (pixels_tree2[2] <= 754) begin state_tree2<=336; end  else begin state_tree2<=343; end 
 
16'd336:if (pixels_tree2[3] <= 754) begin state_tree2<=337; end  else begin state_tree2<=340; end 
 
16'd337:if (pixels_tree2[1] <= 690) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd340:if (pixels_tree2[2] <= 738) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd343:if (pixels_tree2[1] <= 706) begin state_tree2<=344; end  else begin state_tree2<=347; end 
 
16'd344:if (pixels_tree2[2] <= 771) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd347:if (pixels_tree2[3] <= 868) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd350:if (pixels_tree2[1] <= 608) begin state_tree2<=351; end  else begin state_tree2<=414; end 
 
16'd351:if (pixels_tree2[3] <= 803) begin state_tree2<=352; end  else begin state_tree2<=383; end 
 
16'd352:if (pixels_tree2[2] <= 511) begin state_tree2<=353; end  else begin state_tree2<=368; end 
 
16'd353:if (pixels_tree2[3] <= 771) begin state_tree2<=354; end  else begin state_tree2<=361; end 
 
16'd354:if (pixels_tree2[1] <= 495) begin state_tree2<=355; end  else begin state_tree2<=358; end 
 
16'd355:if (pixels_tree2[2] <= 349) begin Label_tree_2<= 3; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd358:if (pixels_tree2[2] <= 251) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd361:if (pixels_tree2[3] <= 787) begin state_tree2<=362; end  else begin state_tree2<=365; end 
 
16'd362:if (pixels_tree2[2] <= 316) begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 3; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd365:if (pixels_tree2[1] <= 495) begin Label_tree_2<= 3; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd368:if (pixels_tree2[1] <= 316) begin state_tree2<=369; end  else begin state_tree2<=376; end 
 
16'd369:if (pixels_tree2[2] <= 722) begin state_tree2<=370; end  else begin state_tree2<=373; end 
 
16'd370:if (pixels_tree2[3] <= 754) begin Label_tree_2<= 8; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd373:if (pixels_tree2[2] <= 974) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 2; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd376:if (pixels_tree2[2] <= 803) begin state_tree2<=377; end  else begin state_tree2<=380; end 
 
16'd377:if (pixels_tree2[2] <= 641) begin Label_tree_2<= 10; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 11; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd380:if (pixels_tree2[1] <= 527) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd383:if (pixels_tree2[1] <= 543) begin state_tree2<=384; end  else begin state_tree2<=399; end 
 
16'd384:if (pixels_tree2[1] <= 381) begin state_tree2<=385; end  else begin state_tree2<=392; end 
 
16'd385:if (pixels_tree2[2] <= 543) begin state_tree2<=386; end  else begin state_tree2<=389; end 
 
16'd386:if (pixels_tree2[3] <= 868) begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd389:if (pixels_tree2[2] <= 941) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd392:if (pixels_tree2[2] <= 543) begin state_tree2<=393; end  else begin state_tree2<=396; end 
 
16'd393:if (pixels_tree2[2] <= 332) begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 3; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd396:if (pixels_tree2[1] <= 478) begin Label_tree_2<= 8; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 3; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd399:if (pixels_tree2[2] <= 430) begin state_tree2<=400; end  else begin state_tree2<=407; end 
 
16'd400:if (pixels_tree2[3] <= 852) begin state_tree2<=401; end  else begin state_tree2<=404; end 
 
16'd401:if (pixels_tree2[2] <= 349) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 6; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd404:if (pixels_tree2[2] <= 365) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd407:if (pixels_tree2[3] <= 836) begin state_tree2<=408; end  else begin state_tree2<=411; end 
 
16'd408:if (pixels_tree2[1] <= 592) begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 3; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd411:if (pixels_tree2[1] <= 560) begin Label_tree_2<= 3; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 6; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd414:if (pixels_tree2[2] <= 381) begin state_tree2<=415; end  else begin state_tree2<=440; end 
 
16'd415:if (pixels_tree2[1] <= 690) begin state_tree2<=416; end  else begin state_tree2<=429; end 
 
16'd416:if (pixels_tree2[3] <= 917) begin state_tree2<=417; end  else begin state_tree2<=424; end 
 
16'd417:if (pixels_tree2[3] <= 771) begin state_tree2<=418; end  else begin state_tree2<=421; end 
 
16'd418:if (pixels_tree2[1] <= 673) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd421:if (pixels_tree2[2] <= 300) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd424:if (pixels_tree2[1] <= 657) begin state_tree2<=425; end 
       else begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 
 
16'd425:if (pixels_tree2[1] <= 641) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 6; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd429:if (pixels_tree2[3] <= 754) begin state_tree2<=430; end  else begin state_tree2<=435; end 
 
16'd430:if (pixels_tree2[2] <= 365) begin state_tree2<=431; end 
       else begin Label_tree_2<= 11; state_tree2<=0;ml_inference_completed_tree2<=1; end 
 
16'd431:if (pixels_tree2[3] <= 738) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd435:if (pixels_tree2[1] <= 795) begin state_tree2<=436; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
 
16'd436:if (pixels_tree2[1] <= 762) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd440:if (pixels_tree2[2] <= 641) begin state_tree2<=441; end  else begin state_tree2<=456; end 
 
16'd441:if (pixels_tree2[3] <= 836) begin state_tree2<=442; end  else begin state_tree2<=449; end 
 
16'd442:if (pixels_tree2[3] <= 754) begin state_tree2<=443; end  else begin state_tree2<=446; end 
 
16'd443:if (pixels_tree2[2] <= 462) begin Label_tree_2<= 11; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd446:if (pixels_tree2[2] <= 397) begin Label_tree_2<= 6; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 11; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd449:if (pixels_tree2[1] <= 641) begin state_tree2<=450; end  else begin state_tree2<=453; end 
 
16'd450:if (pixels_tree2[2] <= 600) begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 4; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd453:if (pixels_tree2[2] <= 527) begin Label_tree_2<= 6; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 0; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd456:if (pixels_tree2[2] <= 803) begin state_tree2<=457; end  else begin state_tree2<=464; end 
 
16'd457:if (pixels_tree2[3] <= 803) begin state_tree2<=458; end  else begin state_tree2<=461; end 
 
16'd458:if (pixels_tree2[1] <= 722) begin Label_tree_2<= 11; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 1; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd461:if (pixels_tree2[3] <= 852) begin Label_tree_2<= 3; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 6; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd464:if (pixels_tree2[3] <= 836) begin state_tree2<=465; end  else begin state_tree2<=468; end 
 
16'd465:if (pixels_tree2[1] <= 673) begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

16'd468:if (pixels_tree2[1] <= 697) begin Label_tree_2<= 9; state_tree2<=0;ml_inference_completed_tree2<=1; end 
       else begin Label_tree_2<= 7; state_tree2<=0;ml_inference_completed_tree2<=1; end 

        endcase
		  
    case (state_tree3)


16'd0:if (pixels_tree3[2] <= 787) begin state_tree3<=1; end  else begin state_tree3<=254; end 
 
16'd1:if (pixels_tree3[3] <= 673) begin state_tree3<=2; end  else begin state_tree3<=129; end 
 
16'd2:if (pixels_tree3[2] <= 690) begin state_tree3<=3; end  else begin state_tree3<=66; end 
 
16'd3:if (pixels_tree3[1] <= 316) begin state_tree3<=4; end  else begin state_tree3<=35; end 
 
16'd4:if (pixels_tree3[0] <= 0) begin state_tree3<=5; end  else begin state_tree3<=20; end 
 
16'd5:if (pixels_tree3[1] <= 170) begin state_tree3<=6; end  else begin state_tree3<=13; end 
 
16'd6:if (pixels_tree3[3] <= 608) begin state_tree3<=7; end  else begin state_tree3<=10; end 
 
16'd7:if (pixels_tree3[1] <= 56) begin Label_tree_3<= 2; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 0; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd10:if (pixels_tree3[1] <= 8) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 5; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd13:if (pixels_tree3[2] <= 527) begin state_tree3<=14; end  else begin state_tree3<=17; end 
 
16'd14:if (pixels_tree3[1] <= 219) begin Label_tree_3<= 6; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 5; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd17:if (pixels_tree3[3] <= 576) begin Label_tree_3<= 0; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 0; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd20:if (pixels_tree3[1] <= 284) begin state_tree3<=21; end  else begin state_tree3<=28; end 
 
16'd21:if (pixels_tree3[1] <= 170) begin state_tree3<=22; end  else begin state_tree3<=25; end 
 
16'd22:if (pixels_tree3[3] <= 592) begin Label_tree_3<= 0; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 0; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd25:if (pixels_tree3[3] <= 462) begin Label_tree_3<= 9; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 0; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd28:if (pixels_tree3[2] <= 608) begin state_tree3<=29; end  else begin state_tree3<=32; end 
 
16'd29:if (pixels_tree3[2] <= 365) begin Label_tree_3<= 9; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 5; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd32:if (pixels_tree3[1] <= 300) begin Label_tree_3<= 2; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 2; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd35:if (pixels_tree3[2] <= 267) begin state_tree3<=36; end  else begin state_tree3<=51; end 
 
16'd36:if (pixels_tree3[1] <= 560) begin state_tree3<=37; end  else begin state_tree3<=44; end 
 
16'd37:if (pixels_tree3[1] <= 397) begin state_tree3<=38; end  else begin state_tree3<=41; end 
 
16'd38:if (pixels_tree3[2] <= 154) begin Label_tree_3<= 6; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd41:if (pixels_tree3[0] <= 0) begin Label_tree_3<= 13; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 6; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd44:if (pixels_tree3[2] <= 219) begin state_tree3<=45; end  else begin state_tree3<=48; end 
 
16'd45:if (pixels_tree3[0] <= 0) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd48:if (pixels_tree3[3] <= 657) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 6; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd51:if (pixels_tree3[1] <= 543) begin state_tree3<=52; end  else begin state_tree3<=59; end 
 
16'd52:if (pixels_tree3[1] <= 365) begin state_tree3<=53; end  else begin state_tree3<=56; end 
 
16'd53:if (pixels_tree3[2] <= 495) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 2; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd56:if (pixels_tree3[0] <= 0) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 2; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd59:if (pixels_tree3[1] <= 722) begin state_tree3<=60; end  else begin state_tree3<=63; end 
 
16'd60:if (pixels_tree3[1] <= 657) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd63:if (pixels_tree3[3] <= 576) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 4; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd66:if (pixels_tree3[0] <= 0) begin state_tree3<=67; end  else begin state_tree3<=98; end 
 
16'd67:if (pixels_tree3[2] <= 722) begin state_tree3<=68; end  else begin state_tree3<=83; end 
 
16'd68:if (pixels_tree3[1] <= 300) begin state_tree3<=69; end  else begin state_tree3<=76; end 
 
16'd69:if (pixels_tree3[2] <= 706) begin state_tree3<=70; end  else begin state_tree3<=73; end 
 
16'd70:if (pixels_tree3[3] <= 576) begin Label_tree_3<= 2; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd73:if (pixels_tree3[1] <= 105) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd76:if (pixels_tree3[1] <= 592) begin state_tree3<=77; end  else begin state_tree3<=80; end 
 
16'd77:if (pixels_tree3[3] <= 625) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd80:if (pixels_tree3[3] <= 560) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd83:if (pixels_tree3[2] <= 754) begin state_tree3<=84; end  else begin state_tree3<=91; end 
 
16'd84:if (pixels_tree3[2] <= 738) begin state_tree3<=85; end  else begin state_tree3<=88; end 
 
16'd85:if (pixels_tree3[3] <= 527) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd88:if (pixels_tree3[1] <= 706) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd91:if (pixels_tree3[2] <= 771) begin state_tree3<=92; end  else begin state_tree3<=95; end 
 
16'd92:if (pixels_tree3[1] <= 681) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd95:if (pixels_tree3[1] <= 665) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd98:if (pixels_tree3[1] <= 365) begin state_tree3<=99; end  else begin state_tree3<=114; end 
 
16'd99:if (pixels_tree3[1] <= 24) begin state_tree3<=100; end  else begin state_tree3<=107; end 
 
16'd100:if (pixels_tree3[2] <= 762) begin state_tree3<=101; end  else begin state_tree3<=104; end 
 
16'd101:if (pixels_tree3[3] <= 633) begin Label_tree_3<= 2; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 0; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd104:if (pixels_tree3[3] <= 511) begin Label_tree_3<= 5; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 2; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd107:if (pixels_tree3[2] <= 722) begin state_tree3<=108; end  else begin state_tree3<=111; end 
 
16'd108:if (pixels_tree3[3] <= 608) begin Label_tree_3<= 5; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 2; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd111:if (pixels_tree3[2] <= 738) begin Label_tree_3<= 5; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 5; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd114:if (pixels_tree3[2] <= 754) begin state_tree3<=115; end  else begin state_tree3<=122; end 
 
16'd115:if (pixels_tree3[1] <= 625) begin state_tree3<=116; end  else begin state_tree3<=119; end 
 
16'd116:if (pixels_tree3[3] <= 519) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd119:if (pixels_tree3[3] <= 357) begin Label_tree_3<= 6; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd122:if (pixels_tree3[3] <= 625) begin state_tree3<=123; end  else begin state_tree3<=126; end 
 
16'd123:if (pixels_tree3[3] <= 389) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd126:if (pixels_tree3[2] <= 771) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd129:if (pixels_tree3[1] <= 673) begin state_tree3<=130; end  else begin state_tree3<=193; end 
 
16'd130:if (pixels_tree3[1] <= 495) begin state_tree3<=131; end  else begin state_tree3<=162; end 
 
16'd131:if (pixels_tree3[3] <= 803) begin state_tree3<=132; end  else begin state_tree3<=147; end 
 
16'd132:if (pixels_tree3[1] <= 332) begin state_tree3<=133; end  else begin state_tree3<=140; end 
 
16'd133:if (pixels_tree3[2] <= 560) begin state_tree3<=134; end  else begin state_tree3<=137; end 
 
16'd134:if (pixels_tree3[1] <= 300) begin Label_tree_3<= 9; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 9; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd137:if (pixels_tree3[0] <= 0) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 8; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd140:if (pixels_tree3[0] <= 0) begin state_tree3<=141; end  else begin state_tree3<=144; end 
 
16'd141:if (pixels_tree3[3] <= 722) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd144:if (pixels_tree3[2] <= 511) begin Label_tree_3<= 3; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 11; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd147:if (pixels_tree3[1] <= 478) begin state_tree3<=148; end  else begin state_tree3<=155; end 
 
16'd148:if (pixels_tree3[2] <= 543) begin state_tree3<=149; end  else begin state_tree3<=152; end 
 
16'd149:if (pixels_tree3[3] <= 852) begin Label_tree_3<= 3; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 9; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd152:if (pixels_tree3[0] <= 0) begin Label_tree_3<= 4; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 8; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd155:if (pixels_tree3[2] <= 576) begin state_tree3<=156; end  else begin state_tree3<=159; end 
 
16'd156:if (pixels_tree3[3] <= 852) begin Label_tree_3<= 3; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 11; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd159:if (pixels_tree3[0] <= 0) begin Label_tree_3<= 13; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 8; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd162:if (pixels_tree3[3] <= 819) begin state_tree3<=163; end  else begin state_tree3<=178; end 
 
16'd163:if (pixels_tree3[2] <= 722) begin state_tree3<=164; end  else begin state_tree3<=171; end 
 
16'd164:if (pixels_tree3[0] <= 0) begin state_tree3<=165; end  else begin state_tree3<=168; end 
 
16'd165:if (pixels_tree3[3] <= 771) begin Label_tree_3<= 13; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 13; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd168:if (pixels_tree3[3] <= 787) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 3; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd171:if (pixels_tree3[1] <= 625) begin state_tree3<=172; end  else begin state_tree3<=175; end 
 
16'd172:if (pixels_tree3[0] <= 0) begin Label_tree_3<= 12; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 3; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd175:if (pixels_tree3[0] <= 0) begin Label_tree_3<= 13; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 11; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd178:if (pixels_tree3[2] <= 527) begin state_tree3<=179; end  else begin state_tree3<=186; end 
 
16'd179:if (pixels_tree3[1] <= 625) begin state_tree3<=180; end  else begin state_tree3<=183; end 
 
16'd180:if (pixels_tree3[0] <= 0) begin Label_tree_3<= 13; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd183:if (pixels_tree3[2] <= 397) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 11; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd186:if (pixels_tree3[2] <= 641) begin state_tree3<=187; end  else begin state_tree3<=190; end 
 
16'd187:if (pixels_tree3[0] <= 0) begin Label_tree_3<= 13; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 3; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd190:if (pixels_tree3[2] <= 657) begin Label_tree_3<= 13; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 13; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd193:if (pixels_tree3[0] <= 0) begin state_tree3<=194; end  else begin state_tree3<=225; end 
 
16'd194:if (pixels_tree3[2] <= 430) begin state_tree3<=195; end  else begin state_tree3<=210; end 
 
16'd195:if (pixels_tree3[2] <= 381) begin state_tree3<=196; end  else begin state_tree3<=203; end 
 
16'd196:if (pixels_tree3[1] <= 722) begin state_tree3<=197; end  else begin state_tree3<=200; end 
 
16'd197:if (pixels_tree3[2] <= 332) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 11; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd200:if (pixels_tree3[3] <= 690) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd203:if (pixels_tree3[1] <= 722) begin state_tree3<=204; end  else begin state_tree3<=207; end 
 
16'd204:if (pixels_tree3[2] <= 413) begin Label_tree_3<= 11; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 11; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd207:if (pixels_tree3[1] <= 738) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd210:if (pixels_tree3[1] <= 754) begin state_tree3<=211; end  else begin state_tree3<=218; end 
 
16'd211:if (pixels_tree3[2] <= 543) begin state_tree3<=212; end  else begin state_tree3<=215; end 
 
16'd212:if (pixels_tree3[2] <= 462) begin Label_tree_3<= 4; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 4; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd215:if (pixels_tree3[3] <= 787) begin Label_tree_3<= 4; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 11; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd218:if (pixels_tree3[1] <= 852) begin state_tree3<=219; end  else begin state_tree3<=222; end 
 
16'd219:if (pixels_tree3[2] <= 673) begin Label_tree_3<= 4; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd222:if (pixels_tree3[1] <= 884) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd225:if (pixels_tree3[2] <= 381) begin state_tree3<=226; end  else begin state_tree3<=239; end 
 
16'd226:if (pixels_tree3[2] <= 365) begin state_tree3<=227; end  else begin state_tree3<=234; end 
 
16'd227:if (pixels_tree3[2] <= 284) begin state_tree3<=228; end  else begin state_tree3<=231; end 
 
16'd228:if (pixels_tree3[3] <= 690) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd231:if (pixels_tree3[2] <= 349) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd234:if (pixels_tree3[3] <= 852) begin state_tree3<=235; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
 
16'd235:if (pixels_tree3[3] <= 754) begin Label_tree_3<= 11; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 9; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd239:if (pixels_tree3[2] <= 527) begin state_tree3<=240; end  else begin state_tree3<=247; end 
 
16'd240:if (pixels_tree3[3] <= 754) begin state_tree3<=241; end  else begin state_tree3<=244; end 
 
16'd241:if (pixels_tree3[1] <= 771) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 4; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd244:if (pixels_tree3[3] <= 868) begin Label_tree_3<= 11; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd247:if (pixels_tree3[2] <= 641) begin state_tree3<=248; end  else begin state_tree3<=251; end 
 
16'd248:if (pixels_tree3[2] <= 560) begin Label_tree_3<= 11; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 4; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd251:if (pixels_tree3[1] <= 738) begin Label_tree_3<= 3; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd254:if (pixels_tree3[1] <= 478) begin state_tree3<=255; end  else begin state_tree3<=360; end 
 
16'd255:if (pixels_tree3[3] <= 706) begin state_tree3<=256; end  else begin state_tree3<=309; end 
 
16'd256:if (pixels_tree3[0] <= 0) begin state_tree3<=257; end  else begin state_tree3<=286; end 
 
16'd257:if (pixels_tree3[3] <= 641) begin state_tree3<=258; end  else begin state_tree3<=273; end 
 
16'd258:if (pixels_tree3[3] <= 560) begin state_tree3<=259; end  else begin state_tree3<=266; end 
 
16'd259:if (pixels_tree3[1] <= 251) begin state_tree3<=260; end  else begin state_tree3<=263; end 
 
16'd260:if (pixels_tree3[3] <= 511) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd263:if (pixels_tree3[1] <= 381) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd266:if (pixels_tree3[1] <= 267) begin state_tree3<=267; end  else begin state_tree3<=270; end 
 
16'd267:if (pixels_tree3[1] <= 154) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd270:if (pixels_tree3[1] <= 300) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd273:if (pixels_tree3[1] <= 300) begin state_tree3<=274; end  else begin state_tree3<=279; end 
 
16'd274:if (pixels_tree3[2] <= 868) begin state_tree3<=275; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
 
16'd275:if (pixels_tree3[3] <= 690) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd279:if (pixels_tree3[2] <= 836) begin state_tree3<=280; end  else begin state_tree3<=283; end 
 
16'd280:if (pixels_tree3[1] <= 365) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd283:if (pixels_tree3[1] <= 462) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd286:if (pixels_tree3[1] <= 300) begin state_tree3<=287; end  else begin state_tree3<=294; end 
 
16'd287:if (pixels_tree3[3] <= 495) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end  else begin state_tree3<=289; end 

16'd289:if (pixels_tree3[1] <= 64) begin Label_tree_3<= 2; state_tree3<=0;ml_inference_completed_tree3<=1; end  else begin state_tree3<=291; end 

16'd291:if (pixels_tree3[2] <= 803) begin Label_tree_3<= 2; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 0; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd294:if (pixels_tree3[2] <= 836) begin state_tree3<=295; end  else begin state_tree3<=302; end 
 
16'd295:if (pixels_tree3[1] <= 413) begin state_tree3<=296; end  else begin state_tree3<=299; end 
 
16'd296:if (pixels_tree3[2] <= 819) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd299:if (pixels_tree3[3] <= 657) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd302:if (pixels_tree3[3] <= 641) begin state_tree3<=303; end  else begin state_tree3<=306; end 
 
16'd303:if (pixels_tree3[2] <= 933) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 2; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd306:if (pixels_tree3[1] <= 430) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 6; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd309:if (pixels_tree3[2] <= 901) begin state_tree3<=310; end  else begin state_tree3<=339; end 
 
16'd310:if (pixels_tree3[1] <= 413) begin state_tree3<=311; end  else begin state_tree3<=324; end 
 
16'd311:if (pixels_tree3[1] <= 332) begin state_tree3<=312; end  else begin state_tree3<=317; end 
 
16'd312:if (pixels_tree3[3] <= 933) begin state_tree3<=313; end 
       else begin Label_tree_3<= 4; state_tree3<=0;ml_inference_completed_tree3<=1; end 
 
16'd313:if (pixels_tree3[1] <= 202) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd317:if (pixels_tree3[2] <= 884) begin state_tree3<=318; end  else begin state_tree3<=321; end 
 
16'd318:if (pixels_tree3[1] <= 397) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd321:if (pixels_tree3[3] <= 754) begin Label_tree_3<= 11; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 6; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd324:if (pixels_tree3[2] <= 852) begin state_tree3<=325; end  else begin state_tree3<=332; end 
 
16'd325:if (pixels_tree3[3] <= 803) begin state_tree3<=326; end  else begin state_tree3<=329; end 
 
16'd326:if (pixels_tree3[3] <= 722) begin Label_tree_3<= 11; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 11; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd329:if (pixels_tree3[2] <= 803) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd332:if (pixels_tree3[1] <= 430) begin state_tree3<=333; end  else begin state_tree3<=336; end 
 
16'd333:if (pixels_tree3[2] <= 868) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd336:if (pixels_tree3[3] <= 787) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd339:if (pixels_tree3[3] <= 787) begin state_tree3<=340; end  else begin state_tree3<=351; end 
 
16'd340:if (pixels_tree3[3] <= 762) begin state_tree3<=341; end  else begin state_tree3<=348; end 
 
16'd341:if (pixels_tree3[3] <= 738) begin state_tree3<=342; end  else begin state_tree3<=345; end 
 
16'd342:if (pixels_tree3[2] <= 974) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd345:if (pixels_tree3[2] <= 933) begin Label_tree_3<= 5; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 2; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd348:if (pixels_tree3[2] <= 925) begin Label_tree_3<= 6; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd351:if (pixels_tree3[0] <= 0) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end  else begin state_tree3<=353; end 

16'd353:if (pixels_tree3[1] <= 340) begin state_tree3<=354; end  else begin state_tree3<=357; end 
 
16'd354:if (pixels_tree3[1] <= 178) begin Label_tree_3<= 0; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 6; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd357:if (pixels_tree3[3] <= 876) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd360:if (pixels_tree3[2] <= 884) begin state_tree3<=361; end  else begin state_tree3<=422; end 
 
16'd361:if (pixels_tree3[3] <= 673) begin state_tree3<=362; end  else begin state_tree3<=391; end 
 
16'd362:if (pixels_tree3[0] <= 0) begin state_tree3<=363; end  else begin state_tree3<=378; end 
 
16'd363:if (pixels_tree3[2] <= 836) begin state_tree3<=364; end  else begin state_tree3<=371; end 
 
16'd364:if (pixels_tree3[3] <= 625) begin state_tree3<=365; end  else begin state_tree3<=368; end 
 
16'd365:if (pixels_tree3[1] <= 608) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd368:if (pixels_tree3[1] <= 690) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd371:if (pixels_tree3[1] <= 543) begin state_tree3<=372; end  else begin state_tree3<=375; end 
 
16'd372:if (pixels_tree3[3] <= 576) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 8; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd375:if (pixels_tree3[3] <= 543) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd378:if (pixels_tree3[3] <= 429) begin state_tree3<=379; end  else begin state_tree3<=384; end 
 
16'd379:if (pixels_tree3[1] <= 868) begin state_tree3<=380; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
 
16'd380:if (pixels_tree3[1] <= 592) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 6; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd384:if (pixels_tree3[3] <= 608) begin state_tree3<=385; end  else begin state_tree3<=388; end 
 
16'd385:if (pixels_tree3[3] <= 592) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd388:if (pixels_tree3[3] <= 657) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd391:if (pixels_tree3[1] <= 608) begin state_tree3<=392; end  else begin state_tree3<=407; end 
 
16'd392:if (pixels_tree3[0] <= 0) begin state_tree3<=393; end  else begin state_tree3<=400; end 
 
16'd393:if (pixels_tree3[2] <= 803) begin state_tree3<=394; end  else begin state_tree3<=397; end 
 
16'd394:if (pixels_tree3[3] <= 819) begin Label_tree_3<= 12; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 4; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd397:if (pixels_tree3[1] <= 527) begin Label_tree_3<= 3; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 12; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd400:if (pixels_tree3[1] <= 495) begin state_tree3<=401; end  else begin state_tree3<=404; end 
 
16'd401:if (pixels_tree3[3] <= 754) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd404:if (pixels_tree3[2] <= 803) begin Label_tree_3<= 3; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd407:if (pixels_tree3[1] <= 657) begin state_tree3<=408; end  else begin state_tree3<=415; end 
 
16'd408:if (pixels_tree3[0] <= 0) begin state_tree3<=409; end  else begin state_tree3<=412; end 
 
16'd409:if (pixels_tree3[1] <= 625) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd412:if (pixels_tree3[1] <= 625) begin Label_tree_3<= 11; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 11; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd415:if (pixels_tree3[0] <= 0) begin state_tree3<=416; end  else begin state_tree3<=419; end 
 
16'd416:if (pixels_tree3[3] <= 722) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd419:if (pixels_tree3[2] <= 803) begin Label_tree_3<= 3; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd422:if (pixels_tree3[2] <= 917) begin state_tree3<=423; end  else begin state_tree3<=450; end 
 
16'd423:if (pixels_tree3[0] <= 0) begin state_tree3<=424; end  else begin state_tree3<=437; end 
 
16'd424:if (pixels_tree3[3] <= 641) begin state_tree3<=425; end  else begin state_tree3<=430; end 
 
16'd425:if (pixels_tree3[1] <= 933) begin state_tree3<=426; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
 
16'd426:if (pixels_tree3[3] <= 478) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd430:if (pixels_tree3[2] <= 901) begin state_tree3<=431; end  else begin state_tree3<=434; end 
 
16'd431:if (pixels_tree3[3] <= 754) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd434:if (pixels_tree3[1] <= 592) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd437:if (pixels_tree3[1] <= 746) begin state_tree3<=438; end  else begin state_tree3<=443; end 
 
16'd438:if (pixels_tree3[1] <= 543) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end  else begin state_tree3<=440; end 

16'd440:if (pixels_tree3[1] <= 560) begin Label_tree_3<= 3; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd443:if (pixels_tree3[3] <= 657) begin state_tree3<=444; end  else begin state_tree3<=447; end 
 
16'd444:if (pixels_tree3[3] <= 641) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 3; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd447:if (pixels_tree3[1] <= 803) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd450:if (pixels_tree3[3] <= 738) begin state_tree3<=451; end  else begin state_tree3<=466; end 
 
16'd451:if (pixels_tree3[3] <= 625) begin state_tree3<=452; end  else begin state_tree3<=459; end 
 
16'd452:if (pixels_tree3[3] <= 543) begin state_tree3<=453; end  else begin state_tree3<=456; end 
 
16'd453:if (pixels_tree3[2] <= 1014) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd456:if (pixels_tree3[0] <= 0) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd459:if (pixels_tree3[1] <= 771) begin state_tree3<=460; end  else begin state_tree3<=463; end 
 
16'd460:if (pixels_tree3[0] <= 0) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd463:if (pixels_tree3[0] <= 0) begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd466:if (pixels_tree3[1] <= 527) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end  else begin state_tree3<=468; end 

16'd468:if (pixels_tree3[2] <= 966) begin state_tree3<=469; end  else begin state_tree3<=472; end 
 
16'd469:if (pixels_tree3[3] <= 754) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 1; state_tree3<=0;ml_inference_completed_tree3<=1; end 

16'd472:if (pixels_tree3[3] <= 982) begin Label_tree_3<= 7; state_tree3<=0;ml_inference_completed_tree3<=1; end 
       else begin Label_tree_3<= 9; state_tree3<=0;ml_inference_completed_tree3<=1; end 
      
        endcase
		  
        end
    end




endmodule

module Binary_To_7Segment 
  (
   input       i_Clk,
	input [3:0] i_Binary_Num,
   output      o_Segment_A,
   output      o_Segment_B,
   output      o_Segment_C,
   output      o_Segment_D,
   output      o_Segment_E,
   output      o_Segment_F,
   output      o_Segment_G
   );
 
  reg [6:0]    r_Hex_Encoding = 7'h00;
   
  // Purpose: Creates a case statement for all possible input binary numbers.
  // Drives r_Hex_Encoding appropriately for each input combination.
  // Encoding at https://www.fpga4student.com/2017/09/seven-segment-led-display-controller-basys3-fpga.html
  always @(posedge i_Clk)
    begin
      case (i_Binary_Num)
        4'b0000 : r_Hex_Encoding <= 7'b0000001;
        4'b0001 : r_Hex_Encoding <= 7'b1001111;
        4'b0010 : r_Hex_Encoding <= 7'b0010010;
        4'b0011 : r_Hex_Encoding <= 7'b0000110;
        4'b0100 : r_Hex_Encoding <= 7'b1001100;         
        4'b0101 : r_Hex_Encoding <= 7'b0100100;
        4'b0110 : r_Hex_Encoding <= 7'b0100000;
        4'b0111 : r_Hex_Encoding <= 7'b0001111;
        4'b1000 : r_Hex_Encoding <= 7'b0000000;
        4'b1001 : r_Hex_Encoding <= 7'b0000100; 
		  4'b1010 : r_Hex_Encoding <= 7'b0001000; //a
		  4'b1011 : r_Hex_Encoding <= 7'b1100000; //b
		  4'b1100 : r_Hex_Encoding <= 7'b0110001;  //c
		  4'b1101 : r_Hex_Encoding <= 7'b1000010;  //d
		  4'b1110 : r_Hex_Encoding <= 7'b0110000;  //e
		  4'b1111 : r_Hex_Encoding <= 7'b0111000;  //f
        default: r_Hex_Encoding = 7'b1111111;
      endcase
    end // always @ (posedge i_Clk)
 
  // r_Hex_Encoding[7] is unused
  assign o_Segment_A = r_Hex_Encoding[6];
  assign o_Segment_B = r_Hex_Encoding[5];
  assign o_Segment_C = r_Hex_Encoding[4];
  assign o_Segment_D = r_Hex_Encoding[3];
  assign o_Segment_E = r_Hex_Encoding[2];
  assign o_Segment_F = r_Hex_Encoding[1];
  assign o_Segment_G = r_Hex_Encoding[0];
 
endmodule // Binary_To_7Segment



//////////////////////////////////////////////////////////////////////
// File Downloaded from http://www.nandland.com
//////////////////////////////////////////////////////////////////////
// This file contains the UART Receiver.  This receiver is able to
// receive 8 bits of serial data, one start bit, one stop bit,
// and no parity bit.  When receive is complete o_rx_dv will be
// driven high for one clock cycle.
// https://www.nandland.com/vhdl/modules/module-uart-serial-port-rs232.html
// Set Parameter CLKS_PER_BIT as follows:
// CLKS_PER_BIT = (Frequency of i_Clock)/(Frequency of UART)
// Example: 50 MHz Clock, 921600 baud UART
// (50000000)/(921600) = 53
  
module uart_rx   #(parameter CLKS_PER_BIT = 53)
  (
   input        i_Clock,
   input        i_Rx_Serial,
   output       o_Rx_DV,
   output [7:0] o_Rx_Byte
   );
    
  parameter s_IDLE         = 3'b000;
  parameter s_RX_START_BIT = 3'b001;
  parameter s_RX_DATA_BITS = 3'b010;
  parameter s_RX_STOP_BIT  = 3'b011; 
  parameter s_CLEANUP      = 3'b100;
   
  reg           r_Rx_Data_R = 1'b1;
  reg           r_Rx_Data   = 1'b1;
   
  reg [7:0]     r_Clock_Count = 0;
  reg [2:0]     r_Bit_Index   = 0; //8 bits total
  reg [7:0]     r_Rx_Byte     = 0;
  reg           r_Rx_DV       = 0;
  reg [2:0]     r_SM_Main     = 0;
   
  // Purpose: Double-register the incoming data.
  // This allows it to be used in the UART RX Clock Domain.
  // (It removes problems caused by metastability)
  always @(posedge i_Clock)
    begin
      r_Rx_Data_R <= i_Rx_Serial;
      r_Rx_Data   <= r_Rx_Data_R;
    end
   
   
  // Purpose: Control RX state machine
  always @(posedge i_Clock)
    begin
       
      case (r_SM_Main)
        s_IDLE :
          begin
            r_Rx_DV       <= 1'b0;
            r_Clock_Count <= 0;
            r_Bit_Index   <= 0;
             
            if (r_Rx_Data == 1'b0)          // Start bit detected
              r_SM_Main <= s_RX_START_BIT;
            else
              r_SM_Main <= s_IDLE;
          end
         
        // Check middle of start bit to make sure it's still low
        s_RX_START_BIT :
          begin
            if (r_Clock_Count == (CLKS_PER_BIT-1)/2)
              begin
                if (r_Rx_Data == 1'b0)
                  begin
                    r_Clock_Count <= 0;  // reset counter, found the middle
                    r_SM_Main     <= s_RX_DATA_BITS;
                  end
                else
                  r_SM_Main <= s_IDLE;
              end
            else
              begin
                r_Clock_Count <= r_Clock_Count + 1;
                r_SM_Main     <= s_RX_START_BIT;
              end
          end // case: s_RX_START_BIT
         
         
        // Wait CLKS_PER_BIT-1 clock cycles to sample serial data
        s_RX_DATA_BITS :
          begin
            if (r_Clock_Count < CLKS_PER_BIT-1)
              begin
                r_Clock_Count <= r_Clock_Count + 1;
                r_SM_Main     <= s_RX_DATA_BITS;
              end
            else
              begin
                r_Clock_Count          <= 0;
                r_Rx_Byte[r_Bit_Index] <= r_Rx_Data;
                 
                // Check if we have received all bits
                if (r_Bit_Index < 7)
                  begin
                    r_Bit_Index <= r_Bit_Index + 1;
                    r_SM_Main   <= s_RX_DATA_BITS;
                  end
                else
                  begin
                    r_Bit_Index <= 0;
                    r_SM_Main   <= s_RX_STOP_BIT;
                  end
              end
          end // case: s_RX_DATA_BITS
     
     
        // Receive Stop bit.  Stop bit = 1
        s_RX_STOP_BIT :
          begin
            // Wait CLKS_PER_BIT-1 clock cycles for Stop bit to finish
            if (r_Clock_Count < CLKS_PER_BIT-1)
              begin
                r_Clock_Count <= r_Clock_Count + 1;
                r_SM_Main     <= s_RX_STOP_BIT;
              end
            else
              begin
                r_Rx_DV       <= 1'b1;
                r_Clock_Count <= 0;
                r_SM_Main     <= s_CLEANUP;
              end
          end // case: s_RX_STOP_BIT
     
        // Stay here 1 clock
        s_CLEANUP :
          begin
            r_SM_Main <= s_IDLE;
            r_Rx_DV   <= 1'b0;
          end
         
         
        default :
          r_SM_Main <= s_IDLE;
         
      endcase
    end   
   
  assign o_Rx_DV   = r_Rx_DV;
  assign o_Rx_Byte = r_Rx_Byte;
   
endmodule // uart_rx


//////////////////////////////////////////////////////////////////////
// File Downloaded from http://www.nandland.com
//////////////////////////////////////////////////////////////////////
// This file contains the UART Transmitter.  This transmitter is able
// to transmit 8 bits of serial data, one start bit, one stop bit,
// and no parity bit.  When transmit is complete o_Tx_done will be
// driven high for one clock cycle.
//
// Set Parameter CLKS_PER_BIT as follows:
// CLKS_PER_BIT = (Frequency of i_Clock)/(Frequency of UART)
// Example: 50 MHz Clock, 921600 baud UART
// (50000000)/(921600) = 53
  
module uart_tx 
  #(parameter CLKS_PER_BIT = 53)
  (
   input       i_Clock,
   input       i_Tx_DV,
   input [7:0] i_Tx_Byte, 
   output      o_Tx_Active,
   output reg  o_Tx_Serial,
   output      o_Tx_Done
   );
  
  parameter s_IDLE         = 3'b000;
  parameter s_TX_START_BIT = 3'b001;
  parameter s_TX_DATA_BITS = 3'b010;
  parameter s_TX_STOP_BIT  = 3'b011;
  parameter s_CLEANUP      = 3'b100;
   
  reg [2:0]    r_SM_Main     = 0;
  reg [7:0]    r_Clock_Count = 0;
  reg [2:0]    r_Bit_Index   = 0;
  reg [7:0]    r_Tx_Data     = 0;
  reg          r_Tx_Done     = 0;
  reg          r_Tx_Active   = 0;
     
  always @(posedge i_Clock)
    begin
       
      case (r_SM_Main)
        s_IDLE :
          begin
            o_Tx_Serial   <= 1'b1;         // Drive Line High for Idle
            r_Tx_Done     <= 1'b0;
            r_Clock_Count <= 0;
            r_Bit_Index   <= 0;
             
            if (i_Tx_DV == 1'b1)
              begin
                r_Tx_Active <= 1'b1;
                r_Tx_Data   <= i_Tx_Byte;
                r_SM_Main   <= s_TX_START_BIT;
              end
            else
              r_SM_Main <= s_IDLE;
          end // case: s_IDLE
         
         
        // Send out Start Bit. Start bit = 0
        s_TX_START_BIT :
          begin
            o_Tx_Serial <= 1'b0;
             
            // Wait CLKS_PER_BIT-1 clock cycles for start bit to finish
            if (r_Clock_Count < CLKS_PER_BIT-1)
              begin
                r_Clock_Count <= r_Clock_Count + 1;
                r_SM_Main     <= s_TX_START_BIT;
              end
            else
              begin
                r_Clock_Count <= 0;
                r_SM_Main     <= s_TX_DATA_BITS;
              end
          end // case: s_TX_START_BIT
         
         
        // Wait CLKS_PER_BIT-1 clock cycles for data bits to finish         
        s_TX_DATA_BITS :
          begin
            o_Tx_Serial <= r_Tx_Data[r_Bit_Index];
             
            if (r_Clock_Count < CLKS_PER_BIT-1)
              begin
                r_Clock_Count <= r_Clock_Count + 1;
                r_SM_Main     <= s_TX_DATA_BITS;
              end
            else
              begin
                r_Clock_Count <= 0;
                 
                // Check if we have sent out all bits
                if (r_Bit_Index < 7)
                  begin
                    r_Bit_Index <= r_Bit_Index + 1;
                    r_SM_Main   <= s_TX_DATA_BITS;
                  end
                else
                  begin
                    r_Bit_Index <= 0;
                    r_SM_Main   <= s_TX_STOP_BIT;
                  end
              end
          end // case: s_TX_DATA_BITS
         
         
        // Send out Stop bit.  Stop bit = 1
        s_TX_STOP_BIT :
          begin
            o_Tx_Serial <= 1'b1;
             
            // Wait CLKS_PER_BIT-1 clock cycles for Stop bit to finish
            if (r_Clock_Count < CLKS_PER_BIT-1)
              begin
                r_Clock_Count <= r_Clock_Count + 1;
                r_SM_Main     <= s_TX_STOP_BIT;
              end
            else
              begin
                r_Tx_Done     <= 1'b1;
                r_Clock_Count <= 0;
                r_SM_Main     <= s_CLEANUP;
                r_Tx_Active   <= 1'b0;
              end
          end // case: s_Tx_STOP_BIT
         
         
        // Stay here 1 clock
        s_CLEANUP :
          begin
            r_Tx_Done <= 1'b1;
            r_SM_Main <= s_IDLE;
          end
         
         
        default :
          r_SM_Main <= s_IDLE;
         
      endcase
    end
 
  assign o_Tx_Active = r_Tx_Active;
  assign o_Tx_Done   = r_Tx_Done;
   
endmodule

